#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrbook
\begin_preamble
% DO NOT ALTER THIS PREAMBLE!!!
%
% This preamble is designed to ensure that the manual prints
% out as advertised. If you mess with this preamble,
% parts of the manual may not print out as expected.  If you
% have problems LaTeXing this file, please contact 
% the documentation team
% email: lyx-docs@lists.lyx.org

% the pages of the TOC are numbered roman
% and a PDF-bookmark for the TOC is added

\pagenumbering{roman}
\let\myTOC\tableofcontents
\renewcommand{\tableofcontents}{%
 \pdfbookmark[1]{\contentsname}{}
 \myTOC

 \pagenumbering{arabic}}

% extra space for tables
\newcommand{\extratablespace}[1]{\noalign{\vskip#1}}
\end_preamble
\options bibliography=totoc,index=totoc,BCOR7.5mm,titlepage,captions=tableheading
\use_default_options false
\begin_modules
logicalmkup
theorems-ams
theorems-ams-extended
multicol
shapepar
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "MongoDB Notes"
\pdf_author "Ladislav Sulak"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "linkcolor=black, citecolor=black, urlcolor=blue, filecolor=blue, pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\notefontcolor #0000ff
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 1
\tocdepth 1
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 1
\math_indentation default
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle headings
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict true
\end_header

\begin_body

\begin_layout Chapter
Riak
\end_layout

\begin_layout Standard
As in case of HBase, this one is too much for us for now.
 We do not need so many data servers since we have not so extremely huge
 amount of data.
 
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Itemize
distributed NoSQL storage.
\end_layout

\begin_layout Itemize
key-value data model.
\end_layout

\begin_layout Itemize
written in Erlang (and some parts in C), initial release in 2009.
\end_layout

\begin_layout Itemize
can do in-memory or disk storage, or both.
\end_layout

\begin_layout Itemize
CAP: high availability and partition tolerance, but not high consistency.
\end_layout

\begin_layout Itemize
using Riak makes sense when your data can be modeled as the following data
 types: flags, registers, counters, sets, or maps.
\end_layout

\begin_layout Itemize
usage: If you need very good single-site scalability, availability and fault-tol
erance, but you're ready to pay for multi-site replication.
 Places where even seconds of downtime hurt.
 It is an overkill for small databases, it is recommended to use it with
 at least 5 data servers in a cluster.
\end_layout

\begin_layout Itemize
"If you’re not already sure that you will need a distributed database, there’s
 a good chance that you won’t need Riak."
\end_layout

\begin_layout Itemize
comparison with Cassandra has been done in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Comparison-to-other"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Section
Licensing
\end_layout

\begin_layout Itemize
free (open source) - Apache 2 License 
\end_layout

\begin_layout Itemize
commercial software - enterprise versions
\end_layout

\begin_layout Section
Pros
\end_layout

\begin_layout Itemize
availability and fault tolerance - Riak writes to and reads from multiple
 servers to offer data availability even when hardware or the network itself
 are experiencing failure conditions.
\end_layout

\begin_layout Itemize
scalable - Riak automatically distributes data around the cluster and yields
 a near-linear performance increase as you add capacity.
\end_layout

\begin_layout Itemize
operational simplicity - easily add new machines to your Riak cluster without
 incurring a larger operational burden.
\end_layout

\begin_layout Itemize
master-less - your requests are not held hostage to a specific server in
 the cluster that may or may not be available.
\end_layout

\begin_layout Section
Cons
\end_layout

\begin_layout Itemize
Search.
 Currently there's no way to tell what data you have in Riak without already
 knowing a particular bucket/key.
 There is a way to list the keys for a given bucket but due to performance
 implications, this is not a viable method to lookup data.
 Especially when you have a large amount of keys in the bucket.
\end_layout

\begin_layout Itemize
Deletes!!! "We've seen on numerous occasions where Riak has "resurrected"
 deleted data.
 We've worked with Basho numerous times and tried multiple changes to the
 way we interact with Riak to prevent the problem but it still remains.
 The deletes seem to reappear weeks, even months, after the delete was issued.
 We've had to work around this issue by providing a "deleted" flag for all
 data objects stored in Riak.
 Thus, we do no delete but simply flip the flag.
 Excess baggage we would really like to not have to worry about
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
footnote{
\backslash
url{https://www.trustradius.com/products/riak/reviews}}
\end_layout

\end_inset

."
\end_layout

\begin_layout Section
Python Usage
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{http://docs.basho.com/riak/kv/2.2.3/developing/getting-started/python/}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{https://basho.github.io/riak-python-client/}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section*
References
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{http://basho.com/products/}
\end_layout

\end_inset

and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{http://docs.basho.com/riak/kv/2.2.3/}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Why Riak KV?
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{http://docs.basho.com/riak/kv/2.2.3/learn/why-riak-kv/}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Distributed Databases
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{http://neurocline.github.io/dev/2015/09/17/distributed-databases.html}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Visual Guide to NoSQL Systems
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{http://blog.nahurst.com/visual-guide-to-nosql-systems}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{https://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
