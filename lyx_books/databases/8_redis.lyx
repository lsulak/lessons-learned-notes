#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrbook
\begin_preamble
% DO NOT ALTER THIS PREAMBLE!!!
%
% This preamble is designed to ensure that the manual prints
% out as advertised. If you mess with this preamble,
% parts of the manual may not print out as expected.  If you
% have problems LaTeXing this file, please contact 
% the documentation team
% email: lyx-docs@lists.lyx.org

% the pages of the TOC are numbered roman
% and a PDF-bookmark for the TOC is added

\pagenumbering{roman}
\let\myTOC\tableofcontents
\renewcommand{\tableofcontents}{%
 \pdfbookmark[1]{\contentsname}{}
 \myTOC

 \pagenumbering{arabic}}

% extra space for tables
\newcommand{\extratablespace}[1]{\noalign{\vskip#1}}
\end_preamble
\options bibliography=totoc,index=totoc,BCOR7.5mm,titlepage,captions=tableheading
\use_default_options false
\begin_modules
logicalmkup
theorems-ams
theorems-ams-extended
multicol
shapepar
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "MongoDB Notes"
\pdf_author "Ladislav Sulak"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "linkcolor=black, citecolor=black, urlcolor=blue, filecolor=blue, pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\notefontcolor #0000ff
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 1
\tocdepth 1
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 1
\math_indentation default
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle headings
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict true
\end_header

\begin_body

\begin_layout Chapter
Redis and Redis Cluster
\end_layout

\begin_layout Itemize
Redis itself is a database primary used for caching.
 We have usually very different purpose.
\end_layout

\begin_layout Itemize
However, Redis Cluster can be spread horizontally across many servers, it
 would be still very fast.
 We want usually to not just store, but also pick data and we fear that
 manipulation with some sophisticated queries would be not that simple.
\end_layout

\begin_layout Itemize
Mostly for data which are changing a lot.
\end_layout

\begin_layout Itemize
Storage - we can choose to be in memory or on disc.
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Itemize
Redis is an open source (BSD licensed), in-memory data structure store (but
 can be placed on disk instead), used as a database, cache and message broker.
 It supports data structures such as strings, hashes, lists, sets, sorted
 sets with range queries, bitmaps, hyperlogs and geospatial indexes with
 radius queries.
\end_layout

\begin_layout Itemize
NoSQL key-value based storage.
\end_layout

\begin_layout Itemize
Redis Cluster is a distributed implementation of Redis.
\end_layout

\begin_layout Itemize
Redis Cluster provides a way to run a Redis installation where data is automatic
ally sharded across multiple Redis nodes.
\end_layout

\begin_layout Itemize
It provides an ability to continue operations when a subset of the nodes
 are experiencing failures or are unable to communicate with the rest of
 the cluster.
\end_layout

\begin_layout Itemize
Usage: For rapidly changing data with a foreseeable database size (should
 fit mostly in memory, but can be changed to disc).
 To store real-time stock prices.
 Real-time analytics.
 Real-time communication.
\end_layout

\begin_layout Itemize
CAP theorem: AP with Redis Sentinel, if Redis is used as a cache and not
 a primary store (there can be still data loss).
\end_layout

\begin_layout Section
Licensing
\end_layout

\begin_layout Itemize
free (open source) - BSD license 
\end_layout

\begin_layout Section
Pros
\end_layout

\begin_layout Itemize
caching - that's what it's built to do, and it does it well 
\end_layout

\begin_layout Itemize
performance - pretty much everything happens in memory, so it's blazing
 fast
\end_layout

\begin_layout Section
Cons
\end_layout

\begin_layout Itemize
complex querying - Redis is not a relational database, and should not be
 used as one
\end_layout

\begin_layout Itemize
not suitable, if you want to store large amount of data in a single string
 value.
 This means queries on these keys will be slow, which will block other queries
 and thereby generally slow down all clients.
 Also, storing data across two or more dimensions is not recommended
\end_layout

\begin_layout Itemize
indexes can have some limitation in comparison to for example PostgreSQL
\end_layout

\begin_layout Itemize
not so bulletproof as some other distributed databases.
 E.g.
 the cluster stops to operate in the event of larger failures - majority
 of masters are unavailable for example
\end_layout

\begin_layout Itemize
not able to provide strong consistency, Redis Cluster can lose writes because
 of asynchronous replication
\end_layout

\begin_layout Section
Python usage
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{https://github.com/Grokzen/redis-py-cluster}
\end_layout

\end_inset

 - it is still active project (however only ~600 stars on GitHub) 
\end_layout

\begin_layout Section*
References
\end_layout

\begin_layout Enumerate
Redis Cluster: Fact Sheet
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{https://dzone.com/articles/redis-cluster-fact-sheet-not-just-issues}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{https://redis.io/topics/}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{https://saipraveenblog.wordpress.com/2016/12/31/nosql/}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
A deep dive into NoSQL: A complete list of NoSQL databases
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{http://bigdata-madesimple.com/a-deep-dive-into-nosql-a-complete-list-of-nosql
-databases/}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Redis System Properties
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{https://db-engines.com/en/system/Redis}
\end_layout

\end_inset


\end_layout

\end_deeper
\end_body
\end_document
