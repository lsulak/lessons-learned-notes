name: cloudformation-project
on:
  push:
    branches:
      - "**"

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cfn-lint
        uses: scottbrenner/cfn-lint-action@master
        with:
          args: "*/.yml"
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v3
        with:
          config_data: |
            rules:
              line-length:
                max: 119
  release:
    name: Release
    if: github.ref == 'refs/heads/master'
    needs: [check]
    runs-on: ubuntu-latest
#    env:
#      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      AWS_DEFAULT_REGION: eu-west-1
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

#      - name: Discover s3 bucket with artifacts
#        run: |
#          DEPLOYED_ARTIFACTS_BUCKET=$(
#            aws ssm get-parameter \
#              --name lsulak-deployed-artifacts-bucket \
#              --query 'Parameter.Value' \
#              --output text
#          )
#          echo "DEPLOYED_ARTIFACTS_BUCKET=$DEPLOYED_ARTIFACTS_BUCKET" >> $GITHUB_ENV
#
#      - name: Discover s3 bucket with IaC code
#        run: |
#          DEPLOYED_CODE_BUCKET=$(
#            aws ssm get-parameter \
#              --name lsulak-deployed-iac-bucket \
#              --query 'Parameter.Value' \
#              --output text
#          )
#          echo "DEPLOYED_CODE_BUCKET=$DEPLOYED_CODE_BUCKET" >> $GITHUB_ENV
#
#      - name: sam package
#        run: |
#          sam package --region $DEPLOYED_CODE_BUCKET \
#            --s3-bucket $DEPLOYED_CODE_BUCKET \
#            --s3-prefix ${{ github.repository }} \
#            --template-file cloudformation/template.yml \
#            --output-template-file packaged.yml
#
#      - name: checkout template-configuration-action repo
#        uses: actions/checkout@v2
#        with:
#          repository: ecotricity/template-configuration-action
#          ref: release
#          token: ${{ secrets.DEVTEAM_GITHUB_TOKEN }}
#          path: .github/actions/template-configuration
#      - name: template-configuration
#        uses: ./.github/actions/template-configuration
#      - name: sar zip (optional) # must be first file in zipinfo for publishing
#        run: |
#          [ ! -f "sar/template.yml" ] || \
#            zip latest.zip packaged-sar.yml
#      - name: zip
#        run:
#          zip latest.zip packaged.yml packaged-template-configuration-*.json
#      - name: upload
#        run: |
#          aws s3api put-object \
#            --bucket $SOURCE_ARTIFACTS_BUCKET \
#            --key ${{ github.repository }}/template/latest.zip \
#            --body latest.zip


      - name: AWS CloudFormation "Deploy CloudFormation Stack" Action for GitHub Actions
        uses: aws-actions/aws-cloudformation-github-deploy@v1.0.3
        with:
          name: lessons-learned-notes
          template: cloudformation/template.yml
          no-fail-on-empty-changeset: "1"
